apiVersion: "v1"
kind: "Service"
metadata:
  name: "postgres-dev"
spec:
  ports:
    - name: "postgres"
      port: 5432
      targetPort: 5432
  type: "ClusterIP"
  clusterIP: "None"
  selector:
    app.kubernetes.io/name: "postgres-dev"
---
apiVersion: "scheduling.k8s.io/v1"
kind: "PriorityClass"
metadata:
  name: "postgres-dev-priority-class"
value: 100
---
apiVersion: "v1"
kind: "PersistentVolumeClaim"
metadata:
  name: "postgres-dev-pvc"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "5G"
---
apiVersion: "apps/v1"
kind: "StatefulSet"
metadata:
  name: "postgres-dev"
  labels:
    app.kubernetes.io/name: "postgres-dev"
spec:
  serviceName: "postgres-dev"
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "postgres-dev"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "postgres-dev"
    spec:
      priorityClassName: "postgres-dev-priority-class"
      containers:
        - name: "postgres"
          image: "postgres:15.4"
          env:
            - name: "POSTGRES_DB"
              value: "dev-db"
            - name: "POSTGRES_USER"
              value: "dev-user"
            - name: "POSTGRES_PASSWORD"
              value: "dev-password"
          ports:
            - name: "postgres"
              containerPort: 5432
          resources:
            requests:
              cpu: "250m"
              memory: "256M"
            limits:
              cpu: "500m"
              memory: "512M"
          volumeMounts:
            - name: "pg-data"
              mountPath: "/var/lib/postgresql"
            - name: "initial-data"
              mountPath: "/docker-entrypoint-initdb.d"
      volumes:
        - name: "pg-data"
          persistentVolumeClaim:
            claimName: "postgres-dev-pvc"
        - name: "initial-data"
          configMap:
            name: "postgres-dev-initial-data"
            optional: true
---
apiVersion: "batch/v1"
kind: "Job"
metadata:
  name: "postgres-populate-dev-data"
spec:
  template:
    spec:
      containers:
        - name: "postgres"
          image: "postgres:15.4"
          workingDir: "/opt/dev-data"
          command: [ "/bin/sh", "-c" ]
          args:
            - >
              cat *.sql |
              psql
              -h postgres-dev
              -p 5432
              -d dev-db
              -U dev-user
              --set=ON_ERROR_STOP=on
              --single-transaction
              -f -
          env:
            - name: "PGPASSWORD"
              value: "dev-password"
          volumeMounts:
            - name: "dev-data"
              mountPath: "/opt/dev-data"
      restartPolicy: "OnFailure"
      activeDeadlineSeconds: 600
      volumes:
        - name: "dev-data"
          configMap:
            name: "postgres-dev-data"
